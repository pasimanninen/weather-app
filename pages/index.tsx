import { GetServerSideProps } from 'next';
import { InferGetServerSidePropsType } from 'next'
import { format } from 'date-fns'

import Head from 'next/head'
import Image from 'next/image'
import styles from '@/styles/Home.module.css'

export default function Home({ weatherInfo, city }
  :InferGetServerSidePropsType<typeof getServerSideProps>) {
  return (
    <>
      <Head>
        <title>Weather Next App</title>
        <meta name="description" content="Weather Next App, generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.center}>
          <h1>{city}</h1>
          <p>{format(new Date(), 'dd.MM.yyyy hh:mm')}</p>
          <p>{Math.round(weatherInfo.main.temp)}Â°C</p>
          <p>{weatherInfo.weather[0].description}</p>
          <Image 
            src={`http://openweathermap.org/img/wn/${weatherInfo.weather[0].icon}@2x.png`} 
            alt="weather icon"
            width={100}
            height={100}
          />
        </div>
      </main>
    </>
  )
}

type Weather = {
  description: string,
  icon: string
}

type Main = {
  temp: number,
}

type WeatherInfo = {
  main: Main,
  weather: Array<Weather>
};

export const getServerSideProps: GetServerSideProps<{ weatherInfo: WeatherInfo, city:string }> = async () => {
  const ipRequest = await fetch(`http://ip-api.com/json/`);
  const ipData = await ipRequest.json();
  let city = ipData.city;
  const api_key = process.env.NEXT_PUBLIC_WEATHER_API_KEY;
  const url = `http://api.openweathermap.org/data/2.5/weather?q=${city},&appid=${api_key}&units=metric`;
  const weatherRequest = await fetch(url);
  const weatherInfo = await weatherRequest.json();
  //console.log('city', city);
  console.log('weatherInfo', weatherInfo);

  return { props: { weatherInfo, city } };
};

// token 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